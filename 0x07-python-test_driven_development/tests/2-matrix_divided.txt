this is a file test for the "matrix_divided(matrix, div)" function
execute with: python3 -m doctest -v ./tests/2-matrix_divided.txt

##########################################################
import the module
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

check for documentation:
	>>> module_documentation = __import__("2-matrix_divided").__doc__
	>>> print(len(module_documentation) > 0)
	True

	>>> function_documentation = __import__("2-matrix_divided").__doc__
	>>> print(len(function_documentation) > 0)
	True

##########################################################
declare a matrix 3x3, positive integer
>>> matrix = [[1, 2, 3],[4, 5, 6]]

try differents working divisions
    by an integer
        >>> matrix_divided(matrix, 2)
        [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

    by a float
        >>> matrix_divided(matrix, 2.5)
        [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

    by a negative number
        >>> matrix_divided(matrix, -1)
        [[-1.0, -2.0, -3.0], [-4.0, -5.0, -6.0]]

declare a matrix 3x3, negative and positive integers, negative and positive floats
>>> matrix = [[1, -2, 3],[4.4, 5, -6.9]]

try differents working divisions
    by an integer
        >>> matrix_divided(matrix, 2)
        [[0.5, -1.0, 1.5], [2.2, 2.5, -3.45]]

    by a float
        >>> matrix_divided(matrix, 2.5)
        [[0.4, -0.8, 1.2], [1.76, 2.0, -2.76]]

    by a negative number
        >>> matrix_divided(matrix, -1)
        [[-1.0, 2.0, -3.0], [-4.4, -5.0, 6.9]]

declare an empty matrix
>>> matrix = [[],[]]

try differents working divisions
    an empty matrix
        >>> matrix_divided(matrix, 2)
        [[], []]

##########################################################
declare a matrix 3x3, negative and positive integers, negative and positive floats
>>> matrix = [[1, -2, 3],[4.4, 5, -6.9]]

try differents no-working divisions
    by 0
        >>> matrix_divided(matrix, 0)
        Traceback (most recent call last):
        ZeroDivisionError: division by zero

declare a matrix 3x3, negative and positive integers, negative and positive floats, string
>>> matrix = [[1, -2, 3],[4.4, "hello", -6.9]]

try differents no-working divisions
    by 2
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

declare a matrix 3x2, negative and positive integers, negative and positive floats
>>> matrix = [[1, -2, 3],[4.4, -6.9]]

try differents no-working divisions
    by 2
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size

declare a matrix 5x4, negative an positive integers, negative and positive floats
>>> matrix = [[1, -2, 3, -7.8, 5],[1, 2.4, 3, 4]]

try differents no-working divisions
    by 2
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size

declare a matrix 3x3, negative and positive integers, negative and positive floats
>>> matrix = [[1, -2, 3],[4.4, 5, -6.9]]

try differents no-working divisions
    by a string
        >>> matrix_divided(matrix, "hello")
        Traceback (most recent call last):
        TypeError: div must be a number

declare a matrix 3x3, with a tuple
>>> matrix = [[1, -2, (3, 4)],[4.4, 5, -6.9]]

try differents no-working divisions
    matrix contain a tuple
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

declare an empty list
>>> matrix = []

try differents no-working divisions
    by a string
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

empty matrix
>>> matrix = None

try differents no-working divisions
    by a string
        >>> matrix_divided(matrix, 2)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

list matrix
>>> matrix = [1, 2, 3]

    matrix is a list
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

None matrix
>>> matrix = [[None], [None]]

    by a number
        >>> matrix_divided(matrix, 3)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

    by None
        >>> matrix_divided(None, None)
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

    missing one argument
        >>> matrix_divided([[2, 3, 4], [2, 3, 2]])
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

    missing two arguments
        >>> matrix_divided()
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
